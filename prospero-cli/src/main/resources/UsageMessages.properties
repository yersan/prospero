#
# This file contains strings that appear in generated usage messages.
#

#
# Prospero Shell Script Name
#
# This item is here to make it available to the Java runtime via a resource bundle.
prospero.dist.name=${prospero.dist.name}

#
# Main Command Welcome Message
#
# This is only printed when running prospero without any parameters.

prospero.welcomeMessage = @|bold Welcome to ${prospero.dist.name} CLI!|@\n\
  \n\
  This tool allows you to provision instances of the ${prospero.target.server} application container.\n

#
# General Usage Sections Headings
#

usage.synopsisHeading = %nUsage:\u0020
# for the main command do not prepend with new line character:
prospero.usage.synopsisHeading = Usage:\u0020
usage.commandListHeading = %nCommands:%n
usage.optionListHeading = %nOptions:%n

#
# Command Descriptions
#
prospero.usage.customSynopsis=             @|bold ${prospero.dist.name}|@ [@|fg(yellow) -hv|@] [COMMAND]

prospero.install.usage.header = Install a new application server instance.
prospero.install.usage.customSynopsis.0 =             @|bold ${prospero.dist.name} install|@ @|fg(yellow) --fpl|@=@|italic <predefined-name>|@ [@|fg(yellow) OPTION|@]...
prospero.install.usage.customSynopsis.1 = \u0020 or:  @|bold ${prospero.dist.name} install|@ @|fg(yellow) --fpl|@=@|italic <predefined-name>|@ @|fg(yellow) --manifest|@=@|italic <URL/GAV/path>|@ @|fg(yellow) --repositories|@=@|italic <URL>[,...]|@ [@|fg(yellow) OPTION|@]...
prospero.install.usage.customSynopsis.2 = \u0020 or:  @|bold ${prospero.dist.name} install|@ @|fg(yellow) --fpl|@=@|italic <URL/GA>|@ @|fg(yellow) --channel|@=@|italic <path>|@ [@|fg(yellow) OPTION|@]...
prospero.install.usage.customSynopsis.3 = \u0020        (to install a feature pack)
prospero.install.usage.customSynopsis.4 = \u0020 or:  @|bold ${prospero.dist.name} install|@ @|fg(yellow) --definition|@=@|italic <path>|@ [@|fg(yellow) OPTION|@]...
prospero.install.usage.customSynopsis.5 = \u0020        (to install from a galleon provisioning.xml file)

prospero.update.usage.header  = Updates a server instance with the latest patches.
prospero.update.usage.description.0 = Update operation can be run either as a one-step (@|bold perform|@) or two-step (@|bold prepare|@+@|bold apply|@) operation.
prospero.update.usage.description.1 = The @|bold prepare|@ step allows to prepare a candidate server containing updates while @|bold apply|@ step will apply\
   that candidate to the base server. The first step can be run while the server is running.
prospero.update.usage.description.2 = The @|bold perform|@ operation performs the update in place, but requires the server to be offline\
  for the whole duration.

prospero.update.perform.usage.header  = Apply the latest available patches on a server instance.
prospero.update.perform.usage.customSynopsis.0 = @|bold ${prospero.dist.name} update perform|@ [@|fg(yellow) --dir|@=@|italic <path>|@] @|fg(yellow) [OPTION]|@...
prospero.update.perform.usage.customSynopsis.1 = \u0020        (to update a server installation)
prospero.update.perform.usage.customSynopsis.2 = \u0020 or:  @|bold ${prospero.dist.name} update perform|@ @|fg(yellow) --self|@ [@|fg(yellow) --dir|@=@|italic <path>|@] [@|fg(yellow) OPTION|@]...
prospero.update.perform.usage.customSynopsis.3 = \u0020        (to update ${prospero.dist.name})

prospero.update.prepare.usage.header  = Provision a server candidate with the latest available patches.
prospero.update.prepare.usage.customSynopsis.0 = \u0020 @|bold ${prospero.dist.name} update prepare|@ [@|fg(yellow) --dir|@=@|italic <path>|@] @|fg(yellow) --update-dir|@=@|italic <path>|@ @|fg(yellow) [OPTION]|@...

prospero.update.apply.usage.header  = Apply changes from a server candidate onto the server instance.

prospero.update.list.usage.header  = Print components that can be upgraded, but do not perform the upgrades.

prospero.history.usage.header = List previous installation states. If the |@bold --revision|@ is provided, it shows changes in that state.

prospero.revert.usage.header  = Reverts to a previous installation state.
prospero.revert.usage.description.0 = Revert operation can be run either as a one-step (@|bold perform|@) or two-step (@|bold prepare|@+@|bold apply|@) operation.
prospero.revert.usage.description.1 = The @|bold prepare|@ step allows to prepare a candidate server containing the required state while @|bold apply|@ step will apply\
   that candidate to the base server. The first step can be run while the server is running.
prospero.revert.usage.description.2 = The @|bold perform|@ operation performs the revert in place, but requires the server to be offline\
  for the whole duration.
prospero.revert.prepare.usage.header = Creates a server with reverted configuration in chosen location.
prospero.revert.prepare.update-dir = Path to generate the reverted server candidate into. The original server will not be changed.
prospero.revert.apply.usage.header = Merges a server prepared with @|bold ${prospero.dist.name} revert prepare|@ into current server installation.
prospero.revert.perform.usage.header = Performs complete revert operation running both @|bold prepare|@ and @|bold apply|@ steps.

prospero.channel.usage.header = Manage channels the installation is subscribed to.
prospero.channel.add.usage.header    = Subscribes the installation to a new channel.
prospero.channel.add.manifest.0 = Location of a Manifest used by the new channel.
prospero.channel.add.manifest.1 = This can be either a file path, URL or Maven coordinate (groupId:artifactId).
prospero.channel.add.repositories.0 = Remote Maven repositories that contains the artifacts required to install the application \
  server (multiple repositories are separated by a comma).
prospero.channel.add.repositories.1 = Valid values are either URLs or ID::URL pairs.
prospero.channel.list.usage.header   = List channels subscribed to by the installation.
prospero.channel.remove.usage.header = Unsubscribe the installation from a channel.
prospero.channel.initialize.usage.header = Add a custom channel to be used by the server
prospero.channel.promote.usage.header = Promote a bundle of artifacts to a custom repository

prospero.clone.usage.header = Clone the server using exported installation metadata.
prospero.clone.export.usage.header = Export the installation metadata.
prospero.clone.restore.usage.header = Restore the installation metadata.

prospero.completion.usage.header = Generate bash completion script. (Apply with `source <(${prospero.dist.name} completion)`)
prospero.completion.usage.description.0 = Generate bash/zsh completion script for ${ROOT-COMMAND-NAME:-the root command of this command}.
prospero.completion.usage.description.1 = Run the following command to give `${ROOT-COMMAND-NAME:-$PARENTCOMMAND}` TAB completion in the current shell:
prospero.completion.usage.description.2 =
prospero.completion.usage.description.3 = \u0020  source <(${PARENT-COMMAND-FULL-NAME:-$PARENTCOMMAND} ${COMMAND-NAME})
prospero.completion.usage.description.4 =
prospero.completion.usage.description.5 = Alternatively, you can save the completion script to a file, and evaluate this file
prospero.completion.usage.description.6 = from your .bashrc script:
prospero.completion.usage.description.7 =
prospero.completion.usage.description.8 = \u0020  ${PARENT-COMMAND-FULL-NAME:-$PARENTCOMMAND} ${COMMAND-NAME} > ~/${prospero.dist.name}_completion
prospero.completion.usage.description.9 = \u0020  echo \". ~/${prospero.dist.name}_completion\" >> ~/.bashrc
prospero.completion.usage.description.10 =

prospero.apply-update.usage.header = Apply previously prepared update to the server. The server has to be stopped during this operation.

prospero.print-licences.usage.header = Print any licences and additional agreements required to install chosen server.

#
# Parameter Groups Headings
#
# By defining these, the parameter groups will be printed in separate sections introduced by these headings.

localRepoOptions.heading = %nMaven cache:%n

#
# Option Descriptions
#

accept-agreements.0 = Agree to all licences required by the server.
accept-agreements.1 = To display required agreements use @|bold print-licences|@ command.
archive = Path to the promoted artifact bundle.
manifest.0 = Location of a Channel Manifest.
manifest.1 = This can be either a file path, URL or Maven coordinate (groupId:artifactId).
manifest.2 = Alternative to --channel.
prospero.channel.promote.manifest = Location of the custom Channel Manifest in GAV form.
repositories.0 = Remote Maven repositories that contains the artifacts required to install the application \
  server (multiple repositories are separated by a comma). These repositories will override any other configured repositories in all channels.
repositories.1 = Valid values are either URLs or ID::URL pairs.
repositories.2 = These repositories will not be persisted in the server configuration.
prospero.install.repositories.0 = ${repositories.0}
prospero.install.repositories.1 = ${repositories.1}
prospero.install.repositories.2 = Alternative to --channel.
channel-name = Name of the new channel. Channel names have to be unique within the installation.
prospero.channel.remove.channel-name = Name of the channel to unsubscribe the installation from.
customization-repository = URL to repository containing custom artifacts.
definition = Galleon provisioning XML definition file path.

# General description for the --dir option, applies to all commands unless a command specifies different description:
dir = Installation directory. If not specified, current working directory is used.
# Description of the --dir option specific to the install command:
prospero.install.dir = Target directory where the application server is going to be provisioned.

dry-run = Print components that can be upgraded, but do not perform the upgrades.
fpl = Feature pack location. This can be a feature pack "GA" like "org.wildfly:wildfly-ee-galleon-pack", or one of \
  pre-defined feature pack names: \ [${COMPLETION-CANDIDATES}].
help = Display this help message.
local-cache = Path to the local Maven repository cache. It overrides the default Maven repository at ~/.m2/repository.
no-resolve-local-cache = Perform the operation without resolving or installing artifacts from/into local maven cache.
offline = Perform installation from local cache or file-system Maven repositories only.
channel.0 = Channels configuration used in the installation. Defines Channel Manifests and Repositories used to provision a server.
channel.1=This can be either a file path, URL or Maven coordinate (groupId:artifactId).
channel.2=Alternative to --manifest and --repositories.
revision = Hash of an installation state.
repoId = Repository ID
repoUrl = Repository URL
target-repository-url = Target repository to promote artifacts to.
self = Update ${prospero.dist.name} installation itself, rather than server installation.
version = Print ${prospero.dist.name} version and exit.
yes = Perform the operation without asking for a confirmation.
path = Path of the file to export to or import from.
update-dir = Path of previously prepared server candidate to be applied.
prospero.update.prepare.update-dir = Path to generate the updated server candidate into. The original server will not be changed.

#
# Exit Codes
#
# This only appears in the main command usage.

prospero.usage.exitCodeListHeading = %nExit codes:%n
prospero.usage.exitCodeList.0 = 0:Successful program execution.
prospero.usage.exitCodeList.1 = 1:Failed operation.
prospero.usage.exitCodeList.2 = 2:Invalid arguments were given.

#
# Footer
#
# This only appears in the main command usage.

prospero.usage.footer = %nUse `${prospero.dist.name} <COMMAND> --help` to show usage information about given command.

#
# Prospero CLI messages
#
prospero.install.agreement.prompt=Accept the agreement(s) [y/N]
prospero.install.agreement.prompt.cancelled=Installation cancelled
prospero.install.agreement.header=To install the requested server, following Agreements need to be accepted:
prospero.install.agreement.no_agreement=The requested software does not require any Agreements.
prospero.install.agreement.skipped=The Agreement(s) has been accepted via %s
prospero.install.progress.feature-pack.started=Resolving feature-pack
prospero.install.progress.feature-pack.done=Feature-packs resolved.
prospero.install.progress.packages=Installing packages
prospero.install.progress.packages.done=Packages installed.
prospero.install.progress.config=Generating configuration
prospero.install.progress.config.done=Configurations generated.
prospero.install.progress.modules=Installing JBoss modules
prospero.install.progress.modules.done=JBoss modules installed.
prospero.install.progress.download=Downloading artifacts
prospero.install.progress.download.done=Downloaded artifacts.
prospero.install.progress.examples=Installing JBoss examples
prospero.install.progress.examples.done=JBoss examples installed.
prospero.install.progress.versions=Resolving versions
prospero.install.progress.versions.done=Versions resolved.
prospero.install.progress.applying_changes=APPLYING CHANGES
prospero.install.validation.unknown_fpl=The chosen FPL is not a known configuration - did you mean one of [%s]?
prospero.install.validation.unknown_fpl.details=If you want to install a custom FPL, make sure a valid channels configuration including repositories and manifest is provided.

prospero.updates.no_updates=No updates found.
prospero.updates.header=Updates found:
prospero.updates.downgrade.warning=%n[*] The update list contain one or more artifacts with lower versions then currently installed. Proceed with caution.%n%n
prospero.updates.prompt=Continue with update [y/N]:
prospero.updates.cancelled=Update cancelled
prospero.updates.complete=Update complete!

prospero.updates.apply.header=Applying updates
prospero.updates.apply.validation.candidate.wrong_candidate=Server at [%s] is not a valid update candidate.
prospero.updates.apply.validation.candidate.outdated=Unable to apply update.%n  Installation at [%s] has been updated since the update candidate [%s] was created.
prospero.updates.apply.validation.candidate.wrong_type=Unable to apply update.%n  The candidate at [%s] was not prepared for %s operation.
prospero.updates.apply.validation.candidate.not_candidate=Unable to apply update.%n  Installation at [%s] doesn't have a candidate marker file.

prospero.updates.build.prompt=Continue with building update [y/N]:
prospero.updates.build.cancelled=Build update cancelled
prospero.updates.build.header=Building updates
prospero.updates.build.complete=Build update complete!
prospero.updates.build.validation.dir.not_empty=The target path needs to point to an empty, writable folder.

prospero.update.invalid.path=Path `%s` does not contain a server installation provisioned by the %s.
prospero.update.invalid.path.details=Server installation needs to contain a `%s` folder and an `%s` file.

prospero.update.self.validation.unknown.installation=Unable to perform self-update - unable to determine installed feature packs.
prospero.update.self.validation.feature_pack=Unable to perform self-update - folder `%s` contains unexpected feature packs.
prospero.update.self.validation.dir.not_found=Unable to locate the installation folder to perform self-update.

prospero.history.no_updates=No changes found

prospero.clone.error.missing_file=The file: [%s] to be restored does not exist.
prospero.clone.success=Installation metadata was restored from: [%s] to [%s].

prospero.channels.added=Channel '%s' added.
prospero.channels.removed=Channel '%s' removed.
prospero.channels.error.notfound=The requested channel doesn't exist

prospero.general.argument.dir.validation.detail=Maybe you forgot to specify path to the installation (%s)?
prospero.general.argument.channel.validation.nochannel.detail=Add required channels using [%s] argument.
prospero.general.prompt.reminder=Choose [y/N]:
prospero.general.prompt.yes=y
prospero.general.prompt.no=n
prospero.general.processing_error=Error when processing command:
prospero.general.operation.completed.time=Operation completed in %.2f seconds.
prospero.general.error.header=ERROR: %s
prospero.general.error.ssl=SSL error, maybe you forgot to configure the certificates
prospero.general.error.host=Unable to resolve or access host
prospero.general.error.resolve.metadata.header=Unable to resolve required channel metadata:
prospero.general.error.resolve.artifacts.header=Unable to resolve artifacts:
prospero.general.error.resolve.artifacts.repositories=Attempted repositories:
prospero.general.error.resolve.offline=offline
prospero.general.error.resolve.streams.header=Requires streams could not be found in any of the subscribed channels.
prospero.general.validation.conflicting_options=Only one of %s and %s can be set.
prospero.general.validation.local_repo.not_directory=Repository path `%s` is a file not a directory.
prospero.general.validation.repo_format=Repository definition [%s] is invalid. The definition format should be [id::url]


prospero.channels.custom.validation.exists=Custom repository `%s` already exist.
prospero.channels.custom.validation.format=Channel `%s` needs to have a groupId:artifactId format
prospero.channels.custom.validation.local_repo_create=Unable to create a repository at `%s`.
prospero.channels.custom.validation.channel.exists=Custom channel already exists.
prospero.channels.custom.confirmation.channel=Registering custom channel `%s`

prospero.channels.promote.validation.format=Channel coordinate must be provided in `groupId:artifactId` format
prospero.channels.promote.validation.no_channel_or_repo=Unable to determine custom channel and repository.%nUse `%s` and `%s` to provide correct values.
prospero.channels.promote.prompt=Continue with promoting artifacts: [y/N]:
prospero.channels.promote.prompt.confirm=Promoting artifacts.
prospero.channels.promote.prompt.cancelled=Operation cancelled.

prospero.changes.diff.manifest=manifest
prospero.changes.diff.repositories=repositories
prospero.changes.diff.updated=Updated
prospero.changes.diff.updates=Updates
prospero.changes.diff.added=Added
prospero.changes.diff.removed=Removed
prospero.changes.diff.conf_changes=Configuration changes
prospero.changes.diff.artifact=artifact
prospero.changes.diff.channel=channel

prospero.changes.conflict.header=Conflicting changes detected in the update:
